apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana-abcxzy
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: helm
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: grafana-abcxzy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana-abcxzy
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "karthikx/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: grafana
                key: admin-username
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: grafana
                key: admin-password
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "false"
          - name: GRAFANA_PORT
            value: "{{ .Values.grafanaPort }}"
          - name: NAMESPACE
            value: "{{.Release.Namespace}}"
          - name: CLUSTER_API_ADDRESS
            value: "{{ .Values.clusterAPIAddress }}"

        readinessProbe:
          httpGet:
            path: /login
            port: 3000
        volumeMounts:
        {{- range $.Values.dashboards }}
        - mountPath: /var/lib/grafana/dashboards/{{ . }}
          name: grafana-config
          readOnly: true
          subPath: {{ . }}
        {{- end }}


      volumes:
      - configMap:
          name: grafana-config
        name: grafana-config
