---
# Source: wireless-ready-itm/charts/grafana/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: grafana
  namespace: devcloud
data:
  admin-password: YWRtaW4=
  admin-username: YWRtaW4=
---
# Source: wireless-ready-itm/charts/itm/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: itm-config
  namespace: devcloud
data:
  camera_config.json: "{\r\n    \"cameras\":[\r\n        {\r\n            \"address\":
    \"Office Apartments 1\",\r\n            \"latitude\": 12.840609,\r\n            \"longitude\":
    77.651993,\r\n            \"analytics\": \"pedestrian vehicle detection\",\r\n            \"device\":
    \"CPU\",\r\n            \"path\": \"./resources/video82_x10.avi\"\r\n        },\r\n
    \       {\r\n            \"address\": \"Office Apartments 2\",\r\n            \"latitude\":
    12.840609,\r\n            \"longitude\": 77.651993,\r\n            \"analytics\":
    \"pedestrian vehicle detection\",\r\n            \"device\": \"CPU\",\r\n            \"path\":
    \"./resources/video1_640x320.mp4\"\r\n        },\r\n        {\r\n            \"address\":
    \"Tech Avenue\",\r\n            \"latitude\": 12.845484,\r\n            \"longitude\":
    77.665585,\r\n            \"analytics\": \"pedestrian vehicle bike detection\",\r\n
    \           \"device\": \"CPU\",\r\n            \"path\": \"./resources/video82_x10.avi\"\r\n
    \       },\r\n        {\r\n            \"address\": \"EC Phase 1\",\r\n            \"latitude\":
    12.845017,\r\n            \"longitude\": 77.659988,\r\n            \"analytics\":
    \"pedestrian vehicle detection\",\r\n            \"device\": \"CPU\",\r\n            \"path\":
    \"./resources/video1_640x320.mp4\"\r\n        },\r\n        {\r\n            \"address\":
    \"Company car parking\",\r\n            \"latitude\": 12.839368,\r\n            \"longitude\":
    77.654709,\r\n            \"analytics\": \"pedestrian vehicle bike detection\",\r\n
    \           \"device\": \"CPU\",\r\n            \"path\": \"./resources/video1_640x320.mp4\"\r\n
    \       },\r\n        {\r\n            \"address\": \"2nd Cross Road\",\r\n            \"latitude\":
    12.840035,\r\n            \"longitude\": 77.659861,\r\n            \"analytics\":
    \"pedestrian vehicle bike detection\",\r\n            \"device\": \"CPU\",\r\n            \"path\":
    \"./resources/video1_640x320.mp4\"\r\n        },\r\n{\r\n            \"address\":\"Some
    Road\",\r\n            \"latitude\":12.841604,\r\n            \"longitude\": 77.664654,\r\n
    \           \"analytics\": \"pedestrian vehicle detection\",\r\n            \"device\":
    \"CPU\",\r\n            \"path\": \"./resources/video82_x10.avi\"\r\n        },\r\n
    \       {\r\n            \"address\": \"Bank Circle\",\r\n            \"latitude\":
    12.840747,\r\n            \"longitude\": 77.663845,\r\n            \"analytics\":
    \"pedestrian vehicle bike detection\",\r\n            \"device\": \"CPU\",\r\n            \"path\":
    \"./resources/video82_x10.avi\"\r\n        },\r\n        {\r\n            \"address\":
    \"Road Intersection\",\r\n            \"latitude\":  12.839091,\r\n            \"longitude\":
    77.659209,\r\n            \"analytics\": \"pedestrian vehicle detection\",\r\n            \"device\":
    \"CPU\",\r\n            \"path\": \"./resources/video1_640x320.mp4\"\r\n        }\r\n
    \   ]\r\n\r\n}\r\n"
---
# Source: wireless-ready-itm/charts/influxdb/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-influxdb
  labels:
    app: release-name-influxdb
    chart: "influxdb-0.1.0"
    release: "release-name"
    heritage: "Helm"
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: wireless-ready-itm/charts/grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: devcloud
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path: '/metrics'
      prometheus.io/port: '3000'
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana-abcxzy
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: helm
spec:
  type: NodePort
  ports:
  - port: 3000
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana-abcxzy
---
# Source: wireless-ready-itm/charts/influxdb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: influxdb
  namespace: devcloud
  labels:
    app.kubernetes.io/name: influxdb-itm
    app.kubernetes.io/instance: influxdb-abcxzy
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/component: database
    app.kubernetes.io/managed-by: helm
spec:
  type: NodePort
  ports:
    - port: 8086
      targetPort: 8086
  selector:
    app.kubernetes.io/name: influxdb-itm
    app.kubernetes.io/instance: influxdb-abcxzy
---
# Source: wireless-ready-itm/charts/itm/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-itm
  namespace: devcloud
  labels:
    helm.sh/chart: itm-0.1.0
    app.kubernetes.io/name: itm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 8000
  selector:
    app.kubernetes.io/name: itm
    app.kubernetes.io/instance: release-name
---
# Source: wireless-ready-itm/charts/grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: devcloud
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana-abcxzy
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: helm

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: grafana-abcxzy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana-abcxzy
    spec:
      containers:
      - name: grafana
        image: "default-route-openshift-image-registry.apps.sandbox.cfa.devcloud.intel.com/devcloud-ri/grafana:itm"
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: grafana
                key: admin-username
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: grafana
                key: admin-password
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
        volumeMounts:
        - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
          name: grafana-config
          readOnly: true
          subPath: datasources.yaml
        - mountPath: /etc/grafana/provisioning/dashboards/grafana-dashboard-provider.yaml
          name: grafana-config
          readOnly: true
          subPath: grafana-dashboard-provider.yaml
      serviceAccountName: 
      serviceAccount: 
      securityContext: {}
      volumes:
        - configMap:
            name: grafana-config
          name: grafana-config
---
# Source: wireless-ready-itm/charts/influxdb/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb-itm
  namespace: devcloud
  labels:
    app.kubernetes.io/name: influxdb-itm
    app.kubernetes.io/instance: influxdb-abcxzy
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/component: database
    app.kubernetes.io/managed-by: helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: influxdb-itm
      app.kubernetes.io/instance: influxdb-abcxzy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: influxdb-itm
        app.kubernetes.io/instance: influxdb-abcxzy
    spec:
      serviceAccountName: 
      serviceAccount: 
      containers:
        - name: influxdb
          image: influxdb:1.8
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: persistent
              mountPath: /var/lib/influxdb
      volumes:
        - name: persistent
          persistentVolumeClaim:
            claimName: release-name-influxdb
---
# Source: wireless-ready-itm/charts/itm/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-itm
  labels:
    helm.sh/chart: itm-0.1.0
    app.kubernetes.io/name: itm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  namespace: devcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: itm
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: itm
        app.kubernetes.io/instance: release-name
    spec:
      containers:
      - image: "default-route-openshift-image-registry.apps.sandbox.cfa.devcloud.intel.com/devcloud-ri/itm:1.5"
        imagePullPolicy: Always
        name: itm
        env:
          - name: LOCAL_HOST
            value: "0.0.0.0"
          - name: INFLUXDB_PORT
            value: "8086"
          - name: GRAFANA_PORT
            value: "3000"
          - name: NAMESPACE
            value: "vijaysriraman9-intel"
          - name: CLUSTER_API_ADDRESS
            value: "https://api.sandbox.cfa.devcloud.intel.com:6443"
          - name: EXTERNAL_ADDRESS
            value: ""
        volumeMounts:
        - mountPath: /app/camera_config.json
          name: itm-config
          readOnly: true
          subPath: camera_config.json
      volumes:
      - configMap:
          name: itm-config
        name: itm-config
---
# Source: wireless-ready-itm/charts/grafana/templates/route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: grafana
  namespace: devcloud
spec:
  to:
    kind: Service
    name: grafana
  port:
    targetPort: 3000
---
# Source: wireless-ready-itm/charts/itm/templates/route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: itm
  namespace: devcloud
spec:
  to:
    kind: Service
    name: release-name-itm
  port:
    targetPort: 8000
---
# Source: wireless-ready-itm/charts/grafana/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-grafana-test-connection"
  labels:
    helm.sh/chart: grafana-0.1.0
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-grafana:3000']
  restartPolicy: Never
---
# Source: wireless-ready-itm/charts/itm/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-itm-test-connections"
  labels:
    helm.sh/chart: itm-0.1.0
    app.kubernetes.io/name: itm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-itm:8000']
  restartPolicy: Never
---
# Source: wireless-ready-itm/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-wireless-ready-itm-test-connection"
  labels:
    helm.sh/chart: wireless-ready-itm-0.1.0
    app.kubernetes.io/name: wireless-ready-itm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-wireless-ready-itm:80']
  restartPolicy: Never
